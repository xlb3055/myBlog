"use strict";(self.webpackChunkblog_road=self.webpackChunkblog_road||[]).push([[3524],{1709:(s,i,a)=>{a.d(i,{l:()=>n});const n={category:{"/":{path:"/category/",map:{使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[0,1,2,3,4]},指南:{path:"/category/%E6%8C%87%E5%8D%97/",indexes:[5]},后端:{path:"/category/%E5%90%8E%E7%AB%AF/",indexes:[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]},开发工具:{path:"/category/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",indexes:[30,31,32,33]},前端:{path:"/category/%E5%89%8D%E7%AB%AF/",indexes:[34,35,36,37,38]}}}},tag:{"/":{path:"/tag/",map:{禁用:{path:"/tag/%E7%A6%81%E7%94%A8/",indexes:[1]},加密:{path:"/tag/%E5%8A%A0%E5%AF%86/",indexes:[2]},布局:{path:"/tag/%E5%B8%83%E5%B1%80/",indexes:[5]},Markdown:{path:"/tag/markdown/",indexes:[3]},页面配置:{path:"/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",indexes:[4]},使用指南:{path:"/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",indexes:[4]},数据库:{path:"/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",indexes:[7]},后端开发技巧:{path:"/tag/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/",indexes:[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]},开发工具:{path:"/tag/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",indexes:[30,31,32,33]},Js:{path:"/tag/js/",indexes:[34]},前端开发技巧:{path:"/tag/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/",indexes:[34,35,36,37]},"Node.js":{path:"/tag/node.js/",indexes:[35,36]},Vue:{path:"/tag/vue/",indexes:[37]},前端:{path:"/tag/%E5%89%8D%E7%AB%AF/",indexes:[38]},Java:{path:"/tag/java/",indexes:[8,9,10,11,12,13,14,15,16,17,19,20,21,22,23]},Spring:{path:"/tag/spring/",indexes:[6,18]},"Mybatis-plus":{path:"/tag/mybatis-plus/",indexes:[24,25,26,27,28,29]}}}}}},4776:(s,i,a)=>{a.d(i,{M:()=>n});const n=["/demo/","/demo/disable.html","/demo/encrypt.html","/demo/markdown.html","/demo/page.html","/demo/layout.html","/posts/%E5%90%8E%E7%AB%AF/Spring/%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html","/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E6%8B%A6%E6%88%AA%E5%99%A8.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BB%A7%E6%89%BF.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E9%80%92%E5%BD%92.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E9%87%8D%E8%BD%BD.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E9%94%81%E7%9A%84%E5%88%86%E7%B1%BB.html","/posts/%E5%90%8E%E7%AB%AF/Spring/AOP.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84%E4%B8%BB%E8%A6%81API.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96Class%E7%B1%BB%E7%9A%84%E5%AE%9E%E4%BE%8B.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E6%B5%8B%E8%AF%95class%E7%B1%BB%E7%9A%84%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E8%8E%B7%E5%BE%97%E7%B1%BB%E7%9A%84%E4%BF%A1%E6%81%AF.html","/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/insert.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/mybatis-plus%E9%85%8D%E7%BD%AE%E6%97%A5%E5%BF%97.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/select.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/update.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/%E4%B9%90%E8%A7%82%E9%94%81.html","/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93.html","/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/Mysql%E5%AE%89%E8%A3%85.html","/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/Navicat16%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BB.html","/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/chocolatey%E7%9A%84%E5%AE%89%E8%A3%85.html","/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/fnm%E7%9A%84%E5%AE%89%E8%A3%85.html","/posts/%E5%89%8D%E7%AB%AF/JS/js%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%A4%9F%E4%B8%BA%E7%A9%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95.html","/posts/%E5%89%8D%E7%AB%AF/Node/fnm%E6%8C%87%E4%BB%A4.html","/posts/%E5%89%8D%E7%AB%AF/Node/http-server.html","/posts/%E5%89%8D%E7%AB%AF/Vue/vue%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E5%8F%B7.html","/posts/%E5%89%8D%E7%AB%AF/%E7%BB%BC%E5%90%88/%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F%E6%BA%90.html","/intro.html"]},3781:(s,i,a)=>{a.d(i,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[6,39,0,1,2,5,3,30,31,32,33,7,34,35,36,37,38,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,4]}},star:{"/":{path:"/star/",indexes:[6]}},timeline:{"/":{path:"/timeline/",indexes:[39,0,1,2,5,3,30,31,32,33,7,34,35,36,37,38,8,9,10,11,12,13,14,15,16,17,18,6,19,20,21,22,23,24,25,26,27,28,29,4]}}}},3600:(s,i,a)=>{a.d(i,{B:()=>q});var n={};a.r(n);var l={};a.r(l);var t={};a.r(t),a.d(t,{default:()=>g});var h={};a.r(h),a.d(h,{default:()=>S});var e={};a.r(e),a.d(e,{default:()=>I});var k=a(8278),p=a(3812),d=a(3073),r=a(9403),A=a(596),B=a(8831);const g=(0,k.re)({enhance:({app:s})=>{(0,p.L4)("FontIcon")||s.component("FontIcon",r.A),(0,p.L4)("Badge")||s.component("Badge",A.A),(0,p.L4)("VPCard")||s.component("VPCard",B.A)},setup:()=>{(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,d.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]});var y=a(6358),c=a(9588),E=a(355),o=a(1599),F=a(5496),v=a(457),m=a(7152),u=a(5214),C=a(1219),b=a(3027),f=a(2763),D=a(9589);const S=(0,k.re)({enhance:({app:s})=>{s.component("CodeTabs",m.A),(0,p.L4)("CodeGroup",s)||s.component("CodeGroup",u.lF),(0,p.L4)("CodeGroupItem",s)||s.component("CodeGroupItem",u.E7),s.component("CodeDemo",C.A),s.component("MdDemo",b.A),s.component("Tabs",D.A)},setup:()=>{(0,f.p)()}});var w=a(3004),x=a(783),j=a(8465),M=a(641),J=a(8030),N=a(9920);(0,j.M_)((s=>{const i=s.t,a=!1!==s.I,n=s.i;return a?{title:i,content:n?()=>[(0,M.h)(x.GB,{icon:n}),i]:null,order:s.O,index:s.I}:null}));const I=(0,k.re)({enhance:({app:s,router:i})=>{const{scrollBehavior:a}=i.options;i.options.scrollBehavior=async(...s)=>(await x.lE.wait(),a(...s)),(0,x.fk)(s),s.component("HopeIcon",x.GB),s.component("BloggerInfo",J.tI),s.component("SocialMedias",J.rS),s.component("GlobalEncrypt",N.J),s.component("LocalEncrypt",N.n)},setup:()=>{(0,x.PV)(),(0,x.i$)(),(0,J.su)()},layouts:{Layout:x.PE,NotFound:x.Mk,BlogCategory:J.Pn,BlogHome:J.qX,BlogType:J.z7,Timeline:J.Kf}}),q=[n,l,t,y,c,E,o,F,v,h,w,e].map((s=>s.default)).filter(Boolean)},8164:(s,i,a)=>{a.d(i,{J:()=>l,c:()=>n});const n=JSON.parse("{}"),l=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,4298)),meta:{t:"博客主页",i:"home"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,2959)),meta:{d:173121942e4,v:"/assets/images/cover3.jpg",e:"\n<p>一个平平无奇努力学习的全栈人。</p>\n",r:{minutes:.07,words:22},t:"我是谁",i:"circle-info",y:"a"}}],["/demo/",{loader:()=>a.e(3320).then(a.bind(a,2410)),meta:{d:173121942e4,c:["使用指南"],r:{minutes:.07,words:22},t:"主要功能与配置演示",i:"laptop-code",y:"a"}}],["/demo/disable.html",{loader:()=>a.e(2756).then(a.bind(a,7383)),meta:{d:173121942e4,c:["使用指南"],g:["禁用"],e:"<p>你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。</p>\n",r:{minutes:.43,words:128},t:"布局与功能禁用",i:"gears",O:4,y:"a"}}],["/demo/encrypt.html",{loader:()=>a.e(2581).then(a.bind(a,4429)),meta:{d:173121942e4,c:["使用指南"],g:["加密"],n:!0,r:{minutes:.51,words:154},t:"密码加密的文章",i:"lock",y:"a"}}],["/demo/layout.html",{loader:()=>a.e(6216).then(a.bind(a,6361)),meta:{d:173121942e4,c:["指南"],g:["布局"],e:'<p>布局包括:</p>\n<ul>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/navbar.html" target="_blank" rel="noopener noreferrer">导航栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/sidebar.html" target="_blank" rel="noopener noreferrer">侧边栏</a></li>\n<li><a href="https://theme-hope.vuejs.press/zh/guide/layout/footer.html" target="_blank" rel="noopener noreferrer">页脚</a></li>\n</ul>',r:{minutes:.53,words:159},t:"布局",i:"object-group",O:2,y:"a"}}],["/demo/markdown.html",{loader:()=>a.e(8711).then(a.bind(a,9618)),meta:{d:173121942e4,c:["使用指南"],g:["Markdown"],e:"<p>VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。</p>\n<p>你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。</p>\n",r:{minutes:3.51,words:1053},t:"Markdown 展示",i:"fab fa-markdown",O:2,y:"a"}}],["/demo/page.html",{loader:()=>a.e(645).then(a.bind(a,2242)),meta:{a:"Ms.Hope",d:15778368e5,l:"2020年1月1日",c:["使用指南"],g:["页面配置","使用指南"],u:!1,v:"/assets/images/cover1.jpg",e:"<p><code>more</code> 注释之前的内容被视为文章摘要。</p>\n",r:{minutes:1.76,words:529},t:"页面配置",i:"file",O:3,y:"a"}}],["/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1.html",{loader:()=>a.e(417).then(a.bind(a,3694)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["数据库","后端开发技巧"],e:"\n<h2>数据库事务的特性</h2>\n<ol>\n<li>原子性：一个事务包含的行为要么全部成功，要么全部不成功，如果在执行中间发生错误，则会进行事务回滚，回滚到事务开始之前的状态</li>\n<li>一致性：事务执行完毕后不会对数据库的完整性造成破坏</li>\n<li>事务的隔离：由于数据库的事务支持多线程，事务隔离是为了防止多个线程的事务造成数据不一致\n持久性：事务完成后，对数据的修改是永久的，哪怕系统故障也不会消失</li>\n</ol>\n<h2>数据库事务的隔离级别</h2>\n<ol>\n<li>未提交读：可以读到其他线程修改但没提交的数据，如果那个线程产生错误从而导致回滚，那么这次读取的数据就是脏数据</li>\n<li>提交读：事务在读取数据的过程中，有其他线程事务修改了数据，造成前后数据不一致</li>\n<li>重复读：一开始读取数据为空，但是尝试修改这条不存在的数据却成功了，此时再读取该数据又可以读取到了</li>\n<li>串行读：是最严格的隔离级别。严格按照先后次序执行，但会造成效率大大下降</li>\n</ol>",r:{minutes:1.21,words:364},t:"数据库事务",i:"pen-to-square",y:"a"}}],["/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/Mysql%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(8429).then(a.bind(a,9352)),meta:{d:17235072e5,l:"2024年8月13日",c:["开发工具"],g:["开发工具"],e:'\n<h2>一、下载</h2>\n<p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener noreferrer">下载地址</a><br>\n下载第一个zip压缩包<br>\n\n<strong>下一个页面直接选左下角的no thanks .....直接开始下载</strong>\n下载后解压缩</p>\n<h2>二、配置文件</h2>\n<p>1.在解压后的文件夹中新建txt文件，并改为my.ini<br>\n</p>\n<p>2.双击打开my.ini文件，将下面代码复制进去，<em><strong>注意：1.修改其中的安装目录和存放目录，下面是我的路径，根据需要修改。2.端口号如果冲突也可以根据需要修改</strong></em></p>',r:{minutes:2.55,words:764},t:"Mysql安装",i:"pen-to-square",y:"a"}}],["/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/Navicat16%E4%B8%8B%E8%BD%BD%E5%8F%8A%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BB.html",{loader:()=>a.e(6837).then(a.bind(a,5344)),meta:{d:17235072e5,l:"2024年8月13日",c:["开发工具"],g:["开发工具"],e:'\n<p>navicat需要付费，本文是navicat16的安装及免费激活的过程 。\n<strong>需要注意的是，navicat安装完成后不要立即打开软件，先进行激活操作</strong></p>\n<ol>\n<li>百度网盘下载安装包及激活码<br>\n链接：<a href="https://pan.baidu.com/s/1pzxioGGFWVc2Z58uv-a9bA?pwd=6t7t" target="_blank" rel="noopener noreferrer">https://pan.baidu.com/s/1pzxioGGFWVc2Z58uv-a9bA?pwd=6t7t </a><br>\n提取码：<code>6t7t</code></li>\n<li>安装\n打开<code>navicat163_premium_cs_x64</code>文件<br>\n下一步 -&gt; 我同意  下一步 -&gt; 选择安装路径 下一步 -&gt; 创建桌面图标 下一步<br></li>\n<li>解压<code>Navicat16.3补丁.zip</code></li>\n<li>双击无限使用Navicat.bat。正常情况是窗口闪一下就消失了</li>\n<li>将winmm.dll复制到安装Navicat的路径中</li>\n<li>打开navicat，如果没有提示试用，则说明成功了。</li>\n</ol>',r:{minutes:.67,words:202},t:"Navicat16下载及免费激活",i:"pen-to-square",y:"a"}}],["/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/chocolatey%E7%9A%84%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(6524).then(a.bind(a,4672)),meta:{d:17235072e5,l:"2024年8月13日",c:["开发工具"],g:["开发工具"],e:'\n<h2>什么是chocolatey</h2>\n<p>该软件是一个开源源代码的软件包管理系统可以实现一键升级以及一键安装一件卸载功能</p>\n<h2>安装</h2>\n<ol>\n<li>进入官网<a href="https://chocolatey.org/install#individual" target="_blank" rel="noopener noreferrer">chocolatey官网</a></li>\n<li>选择选择powershell安装（如何打开powershell：底部搜索框输入powershell，用管理员身份打开）\n</li>\n<li>先在打开的powershell 中输入：<code>Get-ExecutionPolicy</code></li>\n</ol>',r:{minutes:1.87,words:562},t:"chocolatey的安装",i:"pen-to-square",y:"a"}}],["/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/fnm%E7%9A%84%E5%AE%89%E8%A3%85.html",{loader:()=>a.e(822).then(a.bind(a,3491)),meta:{d:17235072e5,l:"2024年8月13日",c:["开发工具"],g:["开发工具"],e:'\n<ol>\n<li>首先要安装chocolatey，如果还未安装可以参考：<a href="/blog_road/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/chocolatey%E7%9A%84%E5%AE%89%E8%A3%85.html" target="_blank">chocolatey的安装</a></li>\n<li>安装fnm\n管理员模式打开终端或powershell，输入<code>choco install fnm</code>\n</li>\n<li>测试fnm命令\n打开Powershell输入<code>fnm -h</code>测试命令是否正常\n</li>\n</ol>',r:{minutes:.35,words:106},t:"fnm的安装",i:"pen-to-square",y:"a"}}],["/posts/%E5%89%8D%E7%AB%AF/JS/js%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%A4%9F%E4%B8%BA%E7%A9%BA%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95.html",{loader:()=>a.e(955).then(a.bind(a,5481)),meta:{d:17233344e5,l:"2024年8月11日",c:["前端"],g:["Js","前端开发技巧"],e:'\n<p>首先定义一个空对象如下：</p>\n<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> test_data</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>',r:{minutes:.64,words:191},t:"Js判断对象是否为空对象的方法",i:"pen-to-square",y:"a"}}],["/posts/%E5%89%8D%E7%AB%AF/Node/fnm%E6%8C%87%E4%BB%A4.html",{loader:()=>a.e(688).then(a.bind(a,7376)),meta:{d:17233344e5,l:"2024年8月11日",c:["前端"],g:["Node.js","前端开发技巧"],e:'\n<p>写在前面：fnm是一个基于Rust的Node.js版本管理工具，其命令如下，若要下载安装fnm,请点击查看文章<a href="/blog_road/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/fnm%E7%9A%84%E5%AE%89%E8%A3%85.html" target="_blank">fnm下载</a></p>\n<div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*列出所有可供下载的node版本*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ls-remote</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*查看系统安装了哪些版本*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*使用特定版本的node*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;version&gt;是自己指定的版本号，如19.3.0*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> use</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">versio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">n&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*查看当前正在运行的版本号*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> current</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*卸载node版本*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;version&gt;是自己指定的版本号，如19.3.0*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> uninstall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">versio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">n&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/*设置版本别名*/</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fnm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> alias</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">versio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">n&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">nam</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">e&gt;</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.63,words:190},t:"fnm指令",i:"pen-to-square",y:"a"}}],["/posts/%E5%89%8D%E7%AB%AF/Node/http-server.html",{loader:()=>a.e(8004).then(a.bind(a,3290)),meta:{d:17233344e5,l:"2024年8月11日",c:["前端"],g:["Node.js","前端开发技巧"],e:"\n<h2>什么是http-server？</h2>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http-server 是一个简单的命令行 HTTP 服务器，它可以快速地将任何目录变成一个 HTTP 服务器。这对于快速搭建本地开发环境、测试静态网页或分享文件非常有用。</p>\n<h2>http-server的安装</h2>\n<ol>\n<li>打开终端或命令提示符</li>\n<li>使用命令 <code>npm install -g http-server</code> 进行全局安装。<br>\n如果只希望在当前项目使用，则使用命令 <code>npm install http-server --save-dev</code></li>\n</ol>",r:{minutes:.99,words:297},t:"http-server的安装及使用",i:"pen-to-square",y:"a"}}],["/posts/%E5%89%8D%E7%AB%AF/Vue/vue%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E5%8F%B7.html",{loader:()=>a.e(8117).then(a.bind(a,9811)),meta:{d:17233344e5,l:"2024年8月11日",c:["前端"],g:["Vue","前端开发技巧"],e:'\n<blockquote>\n<p>在 vue.config.js 文件中加入注释部分代码</p>\n</blockquote>\n<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">defineConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'@vue/cli-service\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">exports</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> defineConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">\ttranspileDependencies</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t/*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t从这里开始</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t*/</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">\tdevServer</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">\t\tport</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8099</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//此处为自己设置的端口号</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">\t}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t/*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t到这里结束</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">\t*/</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.26,words:77},t:"Vue设置端口号",i:"pen-to-square",y:"a"}}],["/posts/%E5%89%8D%E7%AB%AF/%E7%BB%BC%E5%90%88/%E6%B7%98%E5%AE%9D%E9%95%9C%E5%83%8F%E6%BA%90.html",{loader:()=>a.e(3458).then(a.bind(a,2930)),meta:{d:17233344e5,l:"2024年8月11日",c:["前端"],g:["前端"],e:"\n<figure><figcaption>淘宝镜像源</figcaption></figure>\n<p>可直接复制：https://registry.npmmirror.com</p>\n",r:{minutes:.13,words:38},t:"淘宝镜像源",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0.html",{loader:()=>a.e(5024).then(a.bind(a,7191)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public static void main(String[] args) {</span></span>\n<span class="line"><span>    test(1,2,2);</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>/*</span></span>\n<span class="line"><span>    可变参数就是在数据类型后面加...</span></span>\n<span class="line"><span>    在不确定参数个数时可以使用可变参数</span></span>\n<span class="line"><span>    但是！！！！！！可变参数只能放在参数列表最末尾！！！！！</span></span>\n<span class="line"><span> */</span></span>\n<span class="line"><span>public static void test(int... i) {</span></span>\n<span class="line"><span>    for(int j:i) {</span></span>\n<span class="line"><span>        System.out.println(j);</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.33,words:99},t:"Java中的可变参数",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E6%8B%A6%E6%88%AA%E5%99%A8.html",{loader:()=>a.e(4145).then(a.bind(a,2080)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:"\n<p>等待更新。。。</p>\n",r:{minutes:.09,words:27},t:"Java拦截器",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html",{loader:()=>a.e(3929).then(a.bind(a,9419)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:"\n<ol>\n<li>继承Thread类，重写run方法</li>\n<li>实现runable接口，重写的run方法</li>\n<li>实现callable接口，重写call方法。搭配FutureTask来获取返回结果</li>\n<li>利用线程池创建线程</li>\n</ol>\n",r:{minutes:.26,words:79},t:"线程的实现方式",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81.html",{loader:()=>a.e(1406).then(a.bind(a,6687)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:"\n<ol>\n<li>新建状态：线程刚刚创建</li>\n<li>就绪/运行状态</li>\n<li>blocked状态：未持有锁资源的线程进入阻塞状态</li>\n<li>waited状态：wait（）</li>\n<li>timed_waited状态：sleep（）</li>\n<li>结束状态</li>\n</ol>\n<h4>sleep 和 wait 的区别</h4>\n<ol>\n<li>Sleep使线程进入time_waited状态，经过一定时间自动唤醒；waited是在持有锁时主动释放锁资源进入waited状态，等待手动唤醒。</li>\n<li>wait只有在持有锁的时候才能使用，而sleep持有或不持有锁都可以使用。</li>\n<li>在持有锁时使用sleep不会释放锁资源，使用wait会释放锁资源</li>\n</ol>",r:{minutes:.61,words:184},t:"Java中线程的状态",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E7%BB%A7%E6%89%BF.html",{loader:()=>a.e(2443).then(a.bind(a,1323)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<ol>\n<li>继承是 <em><strong>类与类</strong></em> 之间的关系</li>\n<li>Java是<strong>单继承</strong>，不能多继承</li>\n<li>super的注意要点：\n<ol>\n<li>super调用父类的构造方法，必须在构造方法的第一个</li>\n</ol>\n</li>\n</ol>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 父类：</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Father</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Father</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     //如果是有参构造</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     // public Father(String name){</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     //   //代码</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     // }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 子类：</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Son</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Father</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Son</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 调用父类构造方法</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// //如果是有参构造</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// super("huo");</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//下面可以写其他代码</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.68,words:504},t:"Java的继承思想",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8.html",{loader:()=>a.e(552).then(a.bind(a,6360)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 新建一个类，继承Exception</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyException</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 添加一个构造方法，和重写一个tostring方法即可</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">完全体示例：</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 自定义异常</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyException</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> a;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "输入数字的范围应当小于等于10，当前为："</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"。请重新输入"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 使用：</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Test2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// try监控区域</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            zdyExceptionTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(a);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">MyException</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 想要捕获的异常类型,如果监控区域出现指定异常，则执行以下代码</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(e);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不管抛不抛出异常都执行,一般用来关闭io流</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"处理了异常"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // throws是在方法上抛出异常，在调用这个方法的时候捕获异常</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> zdyExceptionTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> MyException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 设置如果a&gt;10就手动抛出异常</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> MyException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(a);</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 抛出异常</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.85,words:256},t:"Java自定义异常",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.html",{loader:()=>a.e(7378).then(a.bind(a,2145)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<ol>\n<li>（CORS）使用<code>@CrossOrigen</code>注解配置</li>\n<li>响应报文中加入一个<code>Access-Control-Allow-Origin</code> 的header</li>\n<li>（CORS）实现WebMVCConfigurer接口然后重写addCorsMapping方法解决跨域问题</li>\n<li>前端使用代理服务器，如Node.js中使用http-proxy-middleware模块。</li>\n</ol>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> addCorsMappings</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">CorsRegistry</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> registry) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 设置允许跨域的路径</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"/**"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 设置允许跨域请求的域名</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allowedOrigins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"http://localhost:8099"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 是否允许证书不失效</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allowCredentials</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 设置允许的方法</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allowedMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"GET"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"POST"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"PUT"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"DELETE"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"OPTIONS"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 设置允许的头信息</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">allowedHeaders</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"*"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 预检请求有效期，单位为秒</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">maxAge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.85,words:254},t:"开发中的跨域问题",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E9%80%92%E5%BD%92.html",{loader:()=>a.e(2669).then(a.bind(a,7364)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<h2>什么是递归？</h2>\n<p>递归就是自己调用自己！！！！！！</p>\n<ul>\n<li>递归思想通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解。</li>\n<li>包括两个部分：\n<ul>\n<li>递归头：什么时候不调用自身方法，如果没有头，将陷入死循环</li>\n<li>递归体：什么时候需要调用自身方法</li>\n</ul>\n</li>\n</ul>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        阶乘</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        思路： 当 n == 1 时，返回n（递归到头，该开始层层往回return了）</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">              当 n != 1 时，做乘法，同时层层递归，相当于f(n) * f(n-1)，然后f（n-1）里面是f(n-1) * f(n-2)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">              所以最后相当于 f(n) * f(n-1) * f(n-2) * ... * f(1)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     */</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> factorial</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> factorial</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.86,words:258},t:"Java递归思想",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E9%87%8D%E8%BD%BD.html",{loader:()=>a.e(2379).then(a.bind(a,9681)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<h2>什么是重载？</h2>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n重载是指：在同一个类里面有两个重名的方法，他们：</p>\n<ol>\n<li>方法名必须相同</li>\n<li>参数列表必须不同（可以参数不同，也可以参数类型不同）</li>\n</ol>\n<h2>举例说明</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] args) {</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reNum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a) {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reNum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">double</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a) {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reNum</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b) {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">}</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回值类型可以相同也可以不同</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 但只有返回值类型不同不是重载</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.51,words:152},t:"Java重载",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E9%94%81%E7%9A%84%E5%88%86%E7%B1%BB.html",{loader:()=>a.e(4195).then(a.bind(a,1570)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:"\n<ol>\n<li>可重入锁、不可重入锁：已经持有锁资源时能否再次持有锁</li>\n<li>乐观锁、悲观锁：悲观锁在获取不到锁资源的时候会将线程挂起，乐观锁会不断重复尝试获取锁资源</li>\n<li>公平锁、非公平锁：未持有锁资源的线程是根据先来后到还是尝试竞争锁资源</li>\n<li>互斥锁、共享锁：锁资源可否被多个线程共同获取</li>\n</ol>\n",r:{minutes:.49,words:146},t:"Java中锁的分类",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Spring/AOP.html",{loader:()=>a.e(1172).then(a.bind(a,7662)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Spring","后端开发技巧"],e:"\n<h2>什么是AOP？</h2>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nAOP（Aspect-Oriented Programming，面向切面编程）是一种编程范式和技术，它旨在解决软件开发中横切关注点（cross-cutting concerns）的问题。横切关注点是指那些跨越多个模块或组件的公共行为，例如日志记录、事务管理、安全验证等功能，这些功能往往会在多个地方出现，导致代码重复。<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nAOP 的主要目的是通过将这些横切关注点从业务逻辑中分离出来，以便能够更好地管理这些功能，减少代码的重复，并提高系统的可维护性和可扩展性。</p>",r:{minutes:1.78,words:534},t:"AOP(面向切面编程)",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Spring/%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",{loader:()=>a.e(507).then(a.bind(a,1669)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Spring","后端开发技巧"],u:!0,e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Controller</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 和 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ResponseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  的组合注解。每个方法的返回值都会以 JSON 或 XML 的形式直接写入 HTTP 响应体中，相当于在每个方法上都添加了 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ResponseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 注解。</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Controller</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：适用于传统的 MVC 架构，它负责处理请求并返回相应的视图。（</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RestController下的方法默认返回的是数据格式</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">，</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Controller注解标注的类下面的方法默认返回的就是以视图为格式</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">）</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">RequestMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：将请求和处理请求的控制器方法关联起来，建立映射关系。（说白了就是定义一个请求到哪的路径）</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">reponseBody</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：用于将controller的返回结果经过转化转为json格式</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">pathvariable</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：获取get请求中的参数</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">GetMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：用于细化接口的请求类型</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">PostMapping</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：用于细化接口的请求类型</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringbootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：用于标记主配置类，其中包含了</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">、</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">EnableAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">、</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ComponentScan三个注解</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：表示这是一个 Spring 配置类，它等价于 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 注解，用于声明类作为 Spring 的配置类。</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">EnableAutoConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：启用 </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Spring</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Boot 的自动配置功能，</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Spring</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Boot 会根据添加到项目中的依赖库来自动配置应用程序，它可以帮助减少显式的配置代码，因为 </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Spring</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Boot 会自动检测和配置合适的 Bean。</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ComponentScan</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">：用于指定要扫描的包，以便 Spring 可以在这些包中查找带有 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Component</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">、</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Service</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">、</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Repository</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 和 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Controller</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 等注解的类。默认情况下，</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">ComponentScan</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 会在包含 </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">SpringBootApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 注解的类所在的包及其子包中进行扫描。</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">12.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autoware</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> 用于实现依赖注入</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">允许 Spring 自动地将匹配的 Bean 注入到类的字段、构造函数或方法中。</span></span>\n<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">13.</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Resource</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">： Java 的一个注解，用于实现依赖注入，和</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Autoware类似</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">，但与之不同的是他默认通过name匹配来注入Bean，如果找不到匹配的name则会退回到通过类型匹配。</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">。。。</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.76,words:529},t:"Springboot 的常用注解（持续更新。。。）",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84%E4%B8%BB%E8%A6%81API.html",{loader:()=>a.e(6860).then(a.bind(a,4172)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     // 反射的主要API</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">     java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Class</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 代表一个类</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">     java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Method</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 代表类的方法</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">     java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Field</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 代表类的成员变量</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">     java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">reflect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Contructor</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 代表类的构造器</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">     </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">     // class类的常用方法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">     static</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ClassforName </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回指定类名name的Class对象</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Object</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> newInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 调用缺省构造函数，返回Class对象的一个实例</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">     getName</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回此Class对象所表示的实体（类，接口，数组类或void）的名称</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> getSuperClass </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回当前Class对象的父类的Class对象</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getinterfaces</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获取当前Class对象的接口</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     ClassLoader</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getClassLoader</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回类的类加载器</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getConstructors</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回一个包含某些Constructoe对象的数组</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Method</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回一个Method对象，此对象的形参类型为paramType</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">     Field</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">[] </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredFields</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 返回Field对象的一个数组</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.77,words:231},t:"Java反射的主要api",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84%E8%8E%B7%E5%8F%96Class%E7%B1%BB%E7%9A%84%E5%AE%9E%E4%BE%8B.html",{loader:()=>a.e(6119).then(a.bind(a,5647)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         * 获取Class类的实例</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 1. 已知具体的类，通过类的class属性获取。该方法最为安全可靠，程序性能最高。</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> clazz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 2. 已知某个类的实例，调用该实例的getClass()方法获取Class对象</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> clazz1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 3. 已知一个类的全类名，且该类在类路径下，可通过Class类的静态方法forName()获取，可能抛出ClassNotDoundException</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> clazz2 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"reflectionStudy.User"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 4. 内置基本数据类型可以直接用类名.Type</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 5. 还可以利用ClassLoader</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.56,words:168},t:"Java 反射获取Class类的实例",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E6%B5%8B%E8%AF%95class%E7%B1%BB%E7%9A%84%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F%E6%9C%89%E5%93%AA%E4%BA%9B.html",{loader:()=>a.e(3997).then(a.bind(a,3158)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 测试class类的创建方式有哪些</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Test01</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Person</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> person</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"这个人是："</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 方式一：通过对象获得</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 方式二：forname获得</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"reflectionStudy.Student"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 方式三：通过类名.class获得</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hashCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 方式四：基本内置类型的包装类都有一个Type属性</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(c4);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 获得父类类型</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c5</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSuperclass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(c5);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> name;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Override</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> toString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Person{"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                "name=\'"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\\'</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\'</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                \'}\'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Student</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "学生"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Teacher</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Teacher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(){</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "老师"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.63,words:189},t:"Java 反射创建class类的创建方式有哪些",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E8%8E%B7%E5%BE%97%E7%B1%BB%E7%9A%84%E4%BF%A1%E6%81%AF.html",{loader:()=>a.e(5662).then(a.bind(a,7118)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得类的信息</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Test02</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NoSuchFieldException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NoSuchMethodException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"reflectionStudy.User"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        获得类的名字</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得包名 + 类名</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getSimpleName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得类名</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         获得类的属性</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"============="</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Field</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fields</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getFields</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 只能找到public属性</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        for (Field field : fields) {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//            System.out.println(field);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        fields </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredFields</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 能找到全部属性</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> field</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fields) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(field);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         获得指定属性的值</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(name);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        获得类的方法</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"============="</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Method</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">methods</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得本类及其父类的全部public方法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> method</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> methods) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"正常的："</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">method);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        methods </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredMethods</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得本类的全部方法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> method</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> methods) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"getDeclaredMethods:"</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">method);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        获取指定方法</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> getName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"getName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> setName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"setName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(getName);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(setName);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        /*</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        获取指定的构造器</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         */</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"=========="</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Constructor</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">constructors</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getConstructors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得public方法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Constructor</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> constructor</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> constructors) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(constructor);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        constructors </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredConstructors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 获得全部方法</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Constructor</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> constructor</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> constructors) {</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(constructor);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.86,words:258},t:"Java 反射如何获得类的信息",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1.html",{loader:()=>a.e(1729).then(a.bind(a,7080)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Java","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 通过反射动态创建对象</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Test03</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[] </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> ClassNotFoundException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InstantiationException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IllegalAccessException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NoSuchMethodException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> InvocationTargetException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NoSuchFieldException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 获得Class对象</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Class</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"reflectionStudy.User"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 构造一个对象</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        User user = (User) c1.newInstance(); // 本质上是调用了类的无参构造器</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        System.out.println(user);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 通过构造器创建对象</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        Constructor constructor = c1.getDeclaredConstructor(String.class, int.class, int.class);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        User user2 = (User) constructor.newInstance("huo", 001, 18);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//        System.out.println(user2);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 通过反射调用普通方法</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user3</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (User) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">newInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 通过反射获取一个方法</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Method</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> setName</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredMethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"setName"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // invoke :激活的意思</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // （对象，“方法的值”）</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        setName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">invoke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user3,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"huo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">user3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //通过反射操作属性</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"==================="</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user4</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (User) </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">newInstance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Field</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> c1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDeclaredField</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 不能直接操作私有属性，我们需要关闭程序的安全检测</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAccessible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user4,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"huo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">user4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.75,words:225},t:"Java 通过反射动态创建对象",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/insert.html",{loader:()=>a.e(9484).then(a.bind(a,4798)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:'\n<h2>insert的基本使用</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 测试插入</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testInsert</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Howkinsen"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setEmail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"191050249@qq.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(result);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.15,words:344},t:"Mybatis-plus 的 insert语法（部分）",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/mybatis-plus%E9%85%8D%E7%BD%AE%E6%97%A5%E5%BF%97.html",{loader:()=>a.e(4626).then(a.bind(a,7050)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:'\n<div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># mybatis-plus配置日志</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">mybatis-plus:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">  configuration:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.13,words:39},t:"Mybatis-plus 配置日志",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/select.html",{loader:()=>a.e(109).then(a.bind(a,5612)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:'\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//    测试查询</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testSelectById</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1796463485688344577L</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//    测试批量查询</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testSelectBatchId</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> users </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectBatchIds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Arrays</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">asList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1796463485688344577L</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1796471132068089857L</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">println);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//    按条件查询之一：使用map操作</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testSelectBatchIds</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">(){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        HashMap</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Object</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> map </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 自定义要查询的条件</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"name"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"张三"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"age"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">User</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> users </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectByMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(map);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        users</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">::</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">println);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 分页查询</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">selectPage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Page</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&gt;(当前页,每页条数),wrapper构造器);</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.44,words:132},t:"Mybatis-plus 的select语法（部分）",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/update.html",{loader:()=>a.e(8520).then(a.bind(a,7861)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:'\n<h2>update 的基本使用</h2>\n<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //测试更新</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B">Test</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> testUpdate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">() {</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        User</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> user </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> User</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1796384136507219970L</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        user</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"huo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 注意参数是 对象</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> userMapper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">updateById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(user);</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(i);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    }</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.14,words:341},t:"Mybatis-plus 的update语法（部分）",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/%E4%B9%90%E8%A7%82%E9%94%81.html",{loader:()=>a.e(8732).then(a.bind(a,9841)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:"\n<h2>什么是乐观锁</h2>\n<p>乐观锁：顾名思义十分乐观，他总是认为不会出现问题，无论干什么都<strong>不去上锁</strong>，如果出现了问题，再次更新值测试<br>\n与之相对的是<strong>悲观锁</strong><br>\n悲观锁：顾名思义十分悲观，他认为总是会出现问题，无论干什么都会<strong>上锁再去操作</strong></p>\n<h2>乐观锁的机制：</h2>\n<p>乐观锁的实现方式：</p>\n<ul>\n<li>取出记录时，获取当前version</li>\n<li>更新时，带上这个version</li>\n<li>执行更新时，set version = newVersion where version = oldVersion</li>\n<li>如果version不对，就更新失败</li>\n</ul>",r:{minutes:1.1,words:330},t:"Mybatis-plus乐观锁",i:"pen-to-square",y:"a"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93.html",{loader:()=>a.e(6101).then(a.bind(a,7680)),meta:{d:17233344e5,l:"2024年8月11日",c:["后端"],g:["Mybatis-plus","后端开发技巧"],e:'\n<div class="language-properties line-numbers-mode" data-highlighter="shiki" data-ext="properties" data-title="properties" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"># 数据库</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">spring:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">  datasource:</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">    driver-class-name: com.mysql.cj.jdbc.Driver</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">    url: jdbc:mysql://localhost:3306/[数据库名称]?</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">useUnicode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">true&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">characterEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">utf-8&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD">serverTimezone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">Asia/Shanghai</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">    username: root </span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#98C379">    password: [密码]</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:.21,words:64},t:"Mybatis-plus 连接mysql数据库的配置项",i:"pen-to-square",y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,4510)),meta:{t:""}}],["/posts/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>a.e(386).then(a.bind(a,5553)),meta:{t:"数据库"}}],["/posts/",{loader:()=>a.e(8666).then(a.bind(a,8290)),meta:{t:"Posts"}}],["/posts/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",{loader:()=>a.e(305).then(a.bind(a,2881)),meta:{t:"工具安装及问题解决"}}],["/posts/%E5%89%8D%E7%AB%AF/JS/",{loader:()=>a.e(9999).then(a.bind(a,2139)),meta:{t:"JS"}}],["/posts/%E5%89%8D%E7%AB%AF/",{loader:()=>a.e(4439).then(a.bind(a,880)),meta:{t:"前端"}}],["/posts/%E5%89%8D%E7%AB%AF/Node/",{loader:()=>a.e(9504).then(a.bind(a,522)),meta:{t:"Node"}}],["/posts/%E5%89%8D%E7%AB%AF/Vue/",{loader:()=>a.e(4556).then(a.bind(a,1880)),meta:{t:"Vue"}}],["/posts/%E5%89%8D%E7%AB%AF/%E7%BB%BC%E5%90%88/",{loader:()=>a.e(4616).then(a.bind(a,1458)),meta:{t:"综合"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/",{loader:()=>a.e(5997).then(a.bind(a,6434)),meta:{t:"Java"}}],["/posts/%E5%90%8E%E7%AB%AF/",{loader:()=>a.e(7248).then(a.bind(a,4449)),meta:{t:"后端"}}],["/posts/%E5%90%8E%E7%AB%AF/Spring/",{loader:()=>a.e(1244).then(a.bind(a,4056)),meta:{t:"Spring"}}],["/posts/%E5%90%8E%E7%AB%AF/Java/%E5%8F%8D%E5%B0%84/",{loader:()=>a.e(7107).then(a.bind(a,7430)),meta:{t:"反射"}}],["/posts/%E5%90%8E%E7%AB%AF/Mybatis-plus/",{loader:()=>a.e(9857).then(a.bind(a,5519)),meta:{t:"Mybatis Plus"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,905)),meta:{t:"分类",I:!1}}],["/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(4021).then(a.bind(a,4581)),meta:{t:"使用指南 分类",I:!1}}],["/category/%E6%8C%87%E5%8D%97/",{loader:()=>a.e(8622).then(a.bind(a,5573)),meta:{t:"指南 分类",I:!1}}],["/category/%E5%90%8E%E7%AB%AF/",{loader:()=>a.e(4887).then(a.bind(a,4564)),meta:{t:"后端 分类",I:!1}}],["/category/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(4491).then(a.bind(a,3784)),meta:{t:"开发工具 分类",I:!1}}],["/category/%E5%89%8D%E7%AB%AF/",{loader:()=>a.e(656).then(a.bind(a,3568)),meta:{t:"前端 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,4103)),meta:{t:"标签",I:!1}}],["/tag/%E7%A6%81%E7%94%A8/",{loader:()=>a.e(1331).then(a.bind(a,2630)),meta:{t:"标签: 禁用",I:!1}}],["/tag/%E5%8A%A0%E5%AF%86/",{loader:()=>a.e(8496).then(a.bind(a,5637)),meta:{t:"标签: 加密",I:!1}}],["/tag/%E5%B8%83%E5%B1%80/",{loader:()=>a.e(609).then(a.bind(a,8661)),meta:{t:"标签: 布局",I:!1}}],["/tag/markdown/",{loader:()=>a.e(7931).then(a.bind(a,7301)),meta:{t:"标签: Markdown",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/",{loader:()=>a.e(602).then(a.bind(a,721)),meta:{t:"标签: 页面配置",I:!1}}],["/tag/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{loader:()=>a.e(1431).then(a.bind(a,5198)),meta:{t:"标签: 使用指南",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>a.e(4817).then(a.bind(a,2688)),meta:{t:"标签: 数据库",I:!1}}],["/tag/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/",{loader:()=>a.e(4059).then(a.bind(a,5706)),meta:{t:"标签: 后端开发技巧",I:!1}}],["/tag/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",{loader:()=>a.e(9925).then(a.bind(a,5737)),meta:{t:"标签: 开发工具",I:!1}}],["/tag/js/",{loader:()=>a.e(1597).then(a.bind(a,8418)),meta:{t:"标签: Js",I:!1}}],["/tag/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E5%B7%A7/",{loader:()=>a.e(7760).then(a.bind(a,4374)),meta:{t:"标签: 前端开发技巧",I:!1}}],["/tag/node.js/",{loader:()=>a.e(8727).then(a.bind(a,5102)),meta:{t:"标签: Node.js",I:!1}}],["/tag/vue/",{loader:()=>a.e(8450).then(a.bind(a,1111)),meta:{t:"标签: Vue",I:!1}}],["/tag/%E5%89%8D%E7%AB%AF/",{loader:()=>a.e(3898).then(a.bind(a,5910)),meta:{t:"标签: 前端",I:!1}}],["/tag/java/",{loader:()=>a.e(250).then(a.bind(a,1320)),meta:{t:"标签: Java",I:!1}}],["/tag/spring/",{loader:()=>a.e(6847).then(a.bind(a,9973)),meta:{t:"标签: Spring",I:!1}}],["/tag/mybatis-plus/",{loader:()=>a.e(7018).then(a.bind(a,8554)),meta:{t:"标签: Mybatis-plus",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,9574)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,3639)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,3931)),meta:{t:"时间轴",I:!1}}]])},8761:(s,i,a)=>{a.d(i,{U:()=>n});const n=JSON.parse('{"base":"/blog_road/","lang":"zh-CN","title":"博客之路","description":"vuepress-theme-hope 的博客演示","head":[],"locales":{}}')},6653:(s,i,a)=>{a.d(i,{K:()=>n});const n=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$y12OFB2Z9livVsQ/tFQQ3eh48g0/kaEk9dxMXJmihqtZf10cyC3Xq"]}},"author":{"name":"Howkinsen","url":"/avator_img.jpg"},"logo":"/avator_img.jpg","repo":"vuepress-theme-hope/vuepress-theme-hope","docsDir":"src","footer":"路漫漫其修远兮，吾将上下而求索。","displayFooter":true,"blog":{"description":"一个努力学习进步的全栈开发者","intro":"/intro.html"},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/","/demo/",{"text":"博文","icon":"pen-to-square","link":"/posts/"}],"sidebar":{"/":["",{"text":"如何使用","icon":"laptop-code","prefix":"demo/","link":"demo/","children":"structure"},{"text":"文章","icon":"book","prefix":"posts/","children":"structure"},"intro",{"text":"幻灯片","icon":"person-chalkboard","link":"https://plugin-md-enhance.vuejs.press/zh/guide/content/revealjs/demo.html"}]}}}}')},8123:(s,i,a)=>{a.d(i,{v:()=>n});const n={"/demo/":["markdown","layout","page","disable","encrypt"],"/posts/":[{text:"前端",prefix:"前端/",collapsible:!0,children:[{text:"JS",prefix:"JS/",collapsible:!0,children:["js判断对象是够为空对象的方法"]},{text:"Node",prefix:"Node/",collapsible:!0,children:["fnm指令","http-server"]},{text:"Vue",prefix:"Vue/",collapsible:!0,children:["vue设置端口号"]},{text:"综合",prefix:"综合/",collapsible:!0,children:["淘宝镜像源"]}]},{text:"后端",prefix:"后端/",collapsible:!0,children:[{text:"Java",prefix:"Java/",collapsible:!0,children:["可变参数","线程的状态","锁的分类","拦截器","继承","自定义异常","递归","重载",{text:"反射",prefix:"反射/",collapsible:!0,children:["测试class类的创建方式有哪些","获得类的信息","反射获取Class类的实例","通过反射动态创建对象","反射主要API"]},"跨域问题","线程的实现方式"]},{text:"Mybatis Plus",prefix:"Mybatis-plus/",collapsible:!0,children:["insert","select","update","连接mysql数据库","mybatis-plus配置日志","乐观锁"]},{text:"Spring",prefix:"Spring/",collapsible:!0,children:["AOP","常用注解"]}]},{text:"工具安装及问题解决",prefix:"工具安装及问题解决/",collapsible:!0,children:["chocolatey的安装","fnm的安装","Mysql安装","Navicat16下载及免费激活"]},{text:"数据库",prefix:"数据库/",collapsible:!0,children:["数据库事务"]}]}},2878:(s,i,a)=>{a.d(i,{P:()=>n});const n={}}},s=>{s.O(0,[6799,4438],(()=>s(s.s=8731))),s.O()}]);