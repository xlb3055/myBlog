"use strict";(self.webpackChunkblog_road=self.webpackChunkblog_road||[]).push([[5720],{6262:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},9657:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>p,data:()=>t});var e=a(641);const i=[(0,e.Fv)('<h1 id="java中的可变参数" tabindex="-1"><a class="header-anchor" href="#java中的可变参数"><span>Java中的可变参数</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>public static void main(String[] args) {</span></span>\n<span class="line"><span>    test(1,2,2);</span></span>\n<span class="line"><span>}</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>/*</span></span>\n<span class="line"><span>    可变参数就是在数据类型后面加...</span></span>\n<span class="line"><span>    在不确定参数个数时可以使用可变参数</span></span>\n<span class="line"><span>    但是！！！！！！可变参数只能放在参数列表最末尾！！！！！</span></span>\n<span class="line"><span> */</span></span>\n<span class="line"><span>public static void test(int... i) {</span></span>\n<span class="line"><span>    for(int j:i) {</span></span>\n<span class="line"><span>        System.out.println(j);</span></span>\n<span class="line"><span>    }</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',2)],l={},p=(0,a(6262).A)(l,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,i)}]]),t=JSON.parse('{"path":"/posts/%E6%9D%82%E7%A2%8E%E8%AE%B0%E5%BD%95/%EF%BD%9E%E5%90%8E%E7%AB%AF%E6%9D%82%E8%AE%B0/Java/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0.html","title":"Java中的可变参数","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-08-11T00:00:00.000Z","category":["后端"],"tag":["Java","后端开发技巧"],"description":"Java中的可变参数","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/myBlog/posts/%E6%9D%82%E7%A2%8E%E8%AE%B0%E5%BD%95/%EF%BD%9E%E5%90%8E%E7%AB%AF%E6%9D%82%E8%AE%B0/Java/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Bin的成长博客"}],["meta",{"property":"og:title","content":"Java中的可变参数"}],["meta",{"property":"og:description","content":"Java中的可变参数"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Bin"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"后端开发技巧"}],["meta",{"property":"article:published_time","content":"2024-08-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java中的可变参数\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bin\\",\\"url\\":\\"/avator_img.jpg\\"}]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"posts/杂碎记录/～后端杂记/Java/可变参数.md","localizedDate":"2024年8月11日","excerpt":"\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>public static void main(String[] args) {</span></span>\\n<span class=\\"line\\"><span>    test(1,2,2);</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>/*</span></span>\\n<span class=\\"line\\"><span>    可变参数就是在数据类型后面加...</span></span>\\n<span class=\\"line\\"><span>    在不确定参数个数时可以使用可变参数</span></span>\\n<span class=\\"line\\"><span>    但是！！！！！！可变参数只能放在参数列表最末尾！！！！！</span></span>\\n<span class=\\"line\\"><span> */</span></span>\\n<span class=\\"line\\"><span>public static void test(int... i) {</span></span>\\n<span class=\\"line\\"><span>    for(int j:i) {</span></span>\\n<span class=\\"line\\"><span>        System.out.println(j);</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}')}}]);